# -*- coding: utf-8 -*-
#
# Copyright (c) ZeroC, Inc. All rights reserved.
#
#
# Ice version 3.7.3
#
# <auto-generated>
#
# Generated from file `VelocityModule.ice'
#
# Warning: do not edit this file.
#
# </auto-generated>
#

from sys import version_info as _version_info_
import Ice, IcePy

# Start of module VelocityModule
_M_VelocityModule = Ice.openModule('VelocityModule')
__name__ = 'VelocityModule'

_M_VelocityModule._t_VelData = IcePy.defineValue('::VelocityModule::VelData', Ice.Value, -1, (), False, True, None, ())

if 'VelDataPrx' not in _M_VelocityModule.__dict__:
    _M_VelocityModule.VelDataPrx = Ice.createTempClass()
    class VelDataPrx(Ice.ObjectPrx):

        def getLatestVelData(self, context=None):
            return _M_VelocityModule.VelData._op_getLatestVelData.invoke(self, ((), context))

        def getLatestVelDataAsync(self, context=None):
            return _M_VelocityModule.VelData._op_getLatestVelData.invokeAsync(self, ((), context))

        def begin_getLatestVelData(self, _response=None, _ex=None, _sent=None, context=None):
            return _M_VelocityModule.VelData._op_getLatestVelData.begin(self, ((), _response, _ex, _sent, context))

        def end_getLatestVelData(self, _r):
            return _M_VelocityModule.VelData._op_getLatestVelData.end(self, _r)

        @staticmethod
        def checkedCast(proxy, facetOrContext=None, context=None):
            return _M_VelocityModule.VelDataPrx.ice_checkedCast(proxy, '::VelocityModule::VelData', facetOrContext, context)

        @staticmethod
        def uncheckedCast(proxy, facet=None):
            return _M_VelocityModule.VelDataPrx.ice_uncheckedCast(proxy, facet)

        @staticmethod
        def ice_staticId():
            return '::VelocityModule::VelData'
    _M_VelocityModule._t_VelDataPrx = IcePy.defineProxy('::VelocityModule::VelData', VelDataPrx)

    _M_VelocityModule.VelDataPrx = VelDataPrx
    del VelDataPrx

    _M_VelocityModule.VelData = Ice.createTempClass()
    class VelData(Ice.Object):

        def ice_ids(self, current=None):
            return ('::Ice::Object', '::VelocityModule::VelData')

        def ice_id(self, current=None):
            return '::VelocityModule::VelData'

        @staticmethod
        def ice_staticId():
            return '::VelocityModule::VelData'

        def getLatestVelData(self, current=None):
            raise NotImplementedError("servant method 'getLatestVelData' not implemented")

        def __str__(self):
            return IcePy.stringify(self, _M_VelocityModule._t_VelDataDisp)

        __repr__ = __str__

    _M_VelocityModule._t_VelDataDisp = IcePy.defineClass('::VelocityModule::VelData', VelData, (), None, ())
    VelData._ice_type = _M_VelocityModule._t_VelDataDisp

    VelData._op_getLatestVelData = IcePy.Operation('getLatestVelData', Ice.OperationMode.Normal, Ice.OperationMode.Normal, False, None, (), (), (), ((), IcePy._t_string, False, 0), ())

    _M_VelocityModule.VelData = VelData
    del VelData

# End of module VelocityModule
